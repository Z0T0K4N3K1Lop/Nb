# -*- coding: utf-8 -*-

import LINETCR
from LINETCR.LineApi import *
from LINETCR.lib.curve.ttypes import *
from datetime import datetime
import time,random,sys,json,codecs,threading,glob,re

cl = LINETCR.LINE()
cl.login(token="Enx3b3R1eF4vJXzdgUH4.7UpnrSpbBLku34NMQquZja.x4YxKzrZJTYGjSGdwvJsXXLrlEMf7dinJfx3jLjKDx0=")
cl.loginResult()

ki = LINETCR.LINE()
ki.login(token="EnCTNh4MU3Y9lUCy39rf.VhUBCNkLBNBEY+aAw6H0ZW.LpKAP5EFi4Tk46FilKnathQMY6QMsDHd+fIyAMEjVuQ=")
ki.loginResult()

kk = LINETCR.LINE()
kk.login(token="EnEAedLdibLoONaMGnK6.Zg2BQYNPKl2ksz44ZIytHG.DN8ar+4Il2MgVoaQ2Z53eFn3uUIEhk3iiPEpbwWPfBk=")
kk.loginResult()

kc = LINETCR.LINE()
kc.login(token="EnutRFKDWhrhTfkmXbo6.lEc1JaEVsI3l5xpWt5mAnG.x3HmElMPxHJz4X7H3hYa8KqEoaiNFIeDfFdRAGtP91Q=")
kc.loginResult()

ka = LINETCR.LINE()
ka.login(token="EnVpepsOV5mXyKu0QfZ6.muq18IWfKt5SEgFXA9fxfG.g0jDSEPT2yonBE4Xr9Ois1Se98T1Wyc7Xmt6l3Qf+CY=")
ka.loginResult()
#cl = LINETCR.LINE()
#cl.login(token="authoken kamu")

#ki  = LINETCR.LINE()
#ki.login(token="authoken kamu")

#kk = LINETCR.LINE()
#kk.login(token="autotoken kamu")

#kc  = LINETCR.LINE()
#kc.login(token="authoken kamu")

print "login success"
reload(sys)
sys.setdefaultencoding('utf-8')

helpMessage =""" ===[COMMAND FOR ADMIN/OWNER]===

? Jam update    "Jam Update Bot"
? Id Group      "Cek Id Group"
? Ginfo         "Group Info"
? Bot?          "Cek All mid Bot"
? Bot 1/2/3     "Cek Mid Bot"
? Respon        "Cek Respon Bot"
? Speed         "Cek Kecepatan Bot"
? Up            "Fungsi Spam Chat"
? Banlist       "Cek Banlist"
? Gn            "Ganti Nama Group"
? Bot1/2/3 Gn   "Ganti Nama Group"
? Cancel        "Cancel User Masuk Group"
? Cum           "Mention Semua User"
? Set View      "Cek Privasi Group"
? Setpoint      "Command untuk Sider"
? Viewseen      "Command untuk Sider"
? Kembali       "Command untuk mengembalikan"
? Glist         "Command Melihat Group Bot"
? Invitetome    "(Groupid)]Mengundang Kita ke Group yang Dituju"
? Myid          "Mengecek Mid"
? Ourl          "Membuka Url Group"
? Curl          "Menutup Url Group"

===[COMMAND FOR OWNER]====

? Ourl          "Membuka Url Group"
? Curl          "Menutup Url Group"
? SetGroup      "Menggatur Privasi Grup"
? Ban @         "Bann Target"
? Unban @       "Unbann Target"
? Kill          "Kick Target Ban"
? Nk @          "Kick Target User"
? Join          "Invite Semua Bot"
? Join Bot1/2   "Invite Bot"
? Bye 1/2/      "Leave Bot"
? Admin add@    "Menambah Admin"
? Admin remove@ "Mengeluarkan Admin"
? Copy @        "Command untuk copy contact"
? Kembali       "Mengembalikan Menjadi Default"
? Bot 1/2/3     "Merename nama bot"
? Adminlist     "Lihat admin"
? Stafflist     "Liat Staff"
? bye           "Leave all bot"

TEAM BOT KANEKI V2

"""

Setgroup =""" COMMAND PROTECTED

? Protect QR -- Qr on / off
? Mid Via Contact -- Contact On / Off
? Reject Invite -- Guest On / Off
? Share Timeline -- Share On / Off
? Leave -- Leave On / off]
? Mengcancel Group Invitation -- Gcancel: (angka)

"""
KAC=[cl,ki,kk,kc,ka]
mid = cl.getProfile().mid
Amid = ki.getProfile().mid
Bmid = kk.getProfile().mid
Cmid = kc.getProfile().mid
Dmid = ka.getProfile().mid

Bots=[mid,Amid,Bmid,Cmid,Dmid]
owner=["uc77fd25b59f6e563d84f1334f3fed10b","u2b457b1ef8391ee451c9a22c835e1e33","u880ee16541e4a34cd0f0dfc6a7e64833"]
admin=["uc77fd25b59f6e563d84f1334f3fed10b"]
staff=[]
wait = {
    'contact':False,
    'autoJoin':False,
    'autoCancel':{"on":True,"members":1},
    'leaveRoom':True,
    'timeline':True,
    'autoAdd':False,
    'message':"Thanks for add me \n" + "untuk pemesanan hubungi \n" + "\n â€¢ line.me/ti/p/~@enr7503k \n â€¢ line.me/ti/p/~ebisuindo \n" + "\n Terimakasih" ,
    "lang":"JP",
    "comment":"Thanks for add me",
    "commentOn":False,
    "commentBlack":{},
    "wblack":False,
    "dblack":False,
    "clock":False,
    "cName":"ZB-First ",
    "cName2":"ZB-Second ",
    "cName3":"ZB-third ",
    "cName4":"ZB-Fourth ",
    "cName5":"ZB-Fifth ",
    "blacklist":{},
    "wblacklist":False,
    "dblacklist":False,
    "ProtectQR":False,
    "Protectguest":False,
    "Protectcancel":False,
    "protectionOn":True,
    "atjointicket":True,
    }
    
wait2 = {
    'readPoint':{},
    'readMember':{},
    'setTime':{},
    'ROM':{}
    }

setTime = {}
setTime = wait2['setTime']

contact = cl.getProfile()
backup = cl.getProfile()
backup.displayName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus
    
contact = ki.getProfile()
backup = ki.getProfile()
backup.displayName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus
    
contact = kk.getProfile()
backup = kk.getProfile()
backup.displayName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus
    
contact = kc.getProfile()
backup = kc.getProfile()
backup.displayName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus

contact = ka.getProfile()
backup = ka.getProfile()
backup.displayName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus


def sendMessage(to, text, contentMetadata={}, contentType=0):
    mes = Message()
    mes.to, mes.from_ = to, profile.mid
    mes.text = text
    mes.contentType, mes.contentMetadata = contentType, contentMetadata
    if to not in messageReq:
        messageReq[to] = -1
    messageReq[to] += 1

def NOTIFIED_READ_MESSAGE(op):
    try:
        if op.param1 in wait2['readPoint']:
            Name = cl.getContact(op.param2).displayName
            if Name in wait2['readMember'][op.param1]:
                pass
            else:
                wait2['readMember'][op.param1] += "\nãƒ»" + Name
                wait2['ROM'][op.param1][op.param2] = "ãƒ»" + Name
        else:
            pass
    except:
        pass


def bot(op):
    try:
        if op.type == 0:
            return
        if op.type == 5:
            if wait["autoAdd"] == True:
                cl.findAndAddContactsByMid(op.param1)
                if (wait["message"] in [""," ","\n",None]):
                    pass
                else:
                    cl.sendText(op.param1,str(wait["message"]))

        if op.type == 26:
            msg = op.message
            
        #------Open QR Kick start------#
        if op.type == 1:
           if wait["ProtectQR"] == True:
               if op.param2 not in Bots or admin or staff or owner:
                   G = cl.getGroup(op.param1)
                   G.preventJoinByTicket = True
                   ki.kickoutFromGroup(op.param1,[op.param2])
                   cl.updateGroup(G)
        #------Open QR Kick finish-----#

        #------Invite User Kick start------#
        if op.type == 13:
           if wait["Protectguest"] == True:
               if op.param2 not in Bots or staff or admin or owner:
                  random.choice(KAC).cancelGroupInvitation(op.param1,[op.param3])
                  random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
        #------Invite User Kick Finish------#
        
        # ----------------- NOTIFED MEMBER JOIN GROUP
        if op.type == 17:
            if op.param2 in Bots:
                return
            cl.sendText(op.param1,cl.getContact(op.param2).displayName + "\nWelcome Honey\n( Ë˜ Â³Ë˜)â™¥")
            print ("MEMBER HAS JOIN THE GROUP")
        #----------------- End
        
        # ----------------- NOTIFED MEMBER OUT GROUP
        if op.type == 15:
            if op.param2 in Bots:
                return
            cl.sendText(op.param1,cl.getContact(op.param2).displayName + "\nGood Bye Honey\nï½ž(^Ð·^)-â™¡")
            print ("MEMBER HAS LEFT THE GROUP")
        #-------------------End

        if op.type == 13:
            if op.param3 in mid:
                if op.param2 in Amid:
                    G = Amid.getGroup(op.param1)
                    G.preventJoinByTicket = False
                    Amid.updateGroup(G)
                    Ticket = Amid.reissueGroupTicket(op.param1)
                    cl.acceptGroupInvitationByTicket(op.param1,Ticket)
                    G.preventJoinByTicket = True
                    Amid.updateGroup(G)
                    Ticket = Amid.reissueGroupTicket(op.param1)

            if op.param3 in Amid:
                if op.param2 in Bmid:
                    X = kk.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    kk.updateGroup(X)
                    Ti = kk.reissueGroupTicket(op.param1)
                    ki.acceptGroupInvitationByTicket(op.param1,Ti)
                    X.preventJoinByTicket = True
                    kk.updateGroup(X)
                    Ti = kk.reissueGroupTicket(op.param1)
            if op.param3 in Bmid:
                if op.param2 in Cmid:
                    X = kc.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    kc.updateGroup(X)
                    Ti = kc.reissueGroupTicket(op.param1)
                    kk.acceptGroupInvitationByTicket(op.param1,Ti)
                    X.preventJoinByTicket = True
                    kc.updateGroup(X)
                    Ti = kc.reissueGroupTicket(op.param1)

            if op.param3 in Cmid:
                if op.param2 in mid:
                    X = cl.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    cl.updateGroup(X)
                    Ti = cl.reissueGroupTicket(op.param1)
                    kc.acceptGroupInvitationByTicket(op.param1,Ti)
                    X.preventJoinByTicket = True
                    cl.updateGroup(X)
                    Ti = cl.reissueGroupTicket(op.param1)

            if op.param3 in Dmid:
                if op.param2 in mid:
                    X = cl.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    cl.updateGroup(X)
                    Ti = cl.reissueGroupTicket(op.param1)
                    ka.acceptGroupInvitationByTicket(op.param1,Ti)
                    X.preventJoinByTicket = True
                    kc.updateGroup(X)
                    Ti = cl.reissueGroupTicket(op.param1)

        if op.type == 19:
           if op.param2 not in Bots or admin or staff or owner:
              random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
              random.choice(KAC).inviteIntoGroup(op.param1,op.param3)

        if op.type == 19:
           if op.param2 in admin:
                return
        if op.type == 19:
                if mid in op.param3:
                    if op.param2 in Bots or staff or admin or owner:
                        pass
                    try:
                        ki.kickoutFromGroup(op.param1,[op.param2])
                    except:
                        try:
                            random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                        except:
                            print ("client Kick regulation or Because it does not exist in the groupã€\n["+op.param1+"]\nã®\n["+op.param2+"]\nã‚’è¹´ã‚‹äº‹ãŒã§ãã¾ã›ã‚“ã§ã—ãŸã€‚\nãƒ–ãƒ©ãƒƒã‚¯ãƒªã‚¹ãƒˆã«è¿½åŠ ã—ã¾ã™ã€‚")
                        if op.param2 in wait["blacklist"]:
                            pass
                        if op.param2 in wait["whitelist"]:
                            pass
                        else:
                            wait["blacklist"][op.param2] = True
                    G = ki.getGroup(op.param1)
                    G.preventJoinByTicket = False
                    ki.updateGroup(G)
                    Ti = ki.reissueGroupTicket(op.param1)
                    cl.acceptGroupInvitationByTicket(op.param1,Ti)
                    ki.acceptGroupInvitationByTicket(op.param1,Ti)
                    kk.acceptGroupInvitationByTicket(op.param1,Ti)
                    kc.acceptGroupInvitationByTicket(op.param1,Ti)
                    ka.acceptGroupInvitationByTicket(op.param1,Ti)
                    X = cl.getGroup(op.param1)
                    X.preventJoinByTicket = True
                    cl.updateGroup(X)
                    Ti = cl.reissueGroupTicket(op.param1)
                    if op.param2 in wait["blacklist"]:
                        pass
                    if op.param2 in wait["whitelist"]:
                        pass
                    else:
                        wait["blacklist"][op.param2] = True

                if Amid in op.param3:
                    if op.param2 in Bots:
                        pass
                    try:
                        kk.kickoutFromGroup(op.param1,[op.param2])
                        kc.kickoutFromGroup(op.param1,[op.param2])
                    except:
                        try:
                            random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                        except:
                            print ("clientReally Nigga?\n["+op.param1+"]\nã®\n["+op.param2+"]\nNay nigga\nYey Nigga")
                        if op.param2 in wait["blacklist"]:
                            pass
                        if op.param2 in wait["whitelist"]:
                            pass
                        else:
                            wait["blacklist"][op.param2] = True

                    X = kk.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    cl.updateGroup(X)
                    Ti = kk.reissueGroupTicket(op.param1)
                    cl.acceptGroupInvitationByTicket(op.param1,Ti)
                    ki.acceptGroupInvitationByTicket(op.param1,Ti)
                    kk.acceptGroupInvitationByTicket(op.param1,Ti)
                    ka.acceptGroupInvitationByTicket(op.param1,Ti)
                    G = ki.getGroup(op.param1)
                    G.preventJoinByTicket = True
                    ki.updateGroup(G)
                    Ticket = ki.reissueGroupTicket(op.param1)
                    if op.param2 in wait["blacklist"]:
                        pass
                    if op.param2 in wait["whitelist"]:
                        pass
                    else:
                        wait["blacklist"][op.param2] = True
                if Bmid in op.param3:
                    if op.param2 in Bots:
                        pass
                    try:
                        kc.kickoutFromGroup(op.param1,[op.param2])
                        kk.kickoutFromGroup(op.param1,[op.param2])
                    except:
                        try:
                            random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                        except:
                            print ("clientReally Nigga?\n["+op.param1+"]\nã®\n["+op.param2+"]\nNay Nigga?\nYey Nigga?")
                        if op.param2 in wait["blacklist"]:
                            pass
                        if op.param2 in wait["whitelist"]:
                            pass
                        else:
                            wait["blacklist"][op.param2] = True

                    X = kc.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    kc.updateGroup(X)
                    Ti = kc.reissueGroupTicket(op.param1)
                    cl.acceptGroupInvitationByTicket(op.param1,Ti)
                    ki.acceptGroupInvitationByTicket(op.param1,Ti)
                    kk.acceptGroupInvitationByTicket(op.param1,Ti)
                    kc.acceptGroupInvitationByTicket(op.param1,Ti)
                    G = kk.getGroup(op.param1)
                    G.preventJoinByTicket = True
                    kk.updateGroup(G)
                    Ticket = kk.reissueGroupTicket(op.param1)
                    if op.param2 in wait["blacklist"]:
                        pass
                    if op.param2 in wait["whitelist"]:
                        pass
                    else:
                        wait["blacklist"][op.param2] = True

                if Cmid in op.param3:
                    if op.param2 in Bots:
                        pass
                    try:
                        cl.kickoutFromGroup(op.param1,[op.param2])
                        kk.kickoutFromGroup(op.param1,[op.param2])
                    except:
                        try:
                            random.choice(KAC).kickoutFromGroup(op.param1,[op.param2])
                        except:
                            print ("clientReally Nigga?\n["+op.param1+"]\nã®\n["+op.param2+"]\nNay Nigga?\nYey Nigga?")
                        if op.param2 in wait["blacklist"]:
                            pass
                        if op.param2 in wait["whitelist"]:
                            pass
                        else:
                            wait["blacklist"][op.param2] = True

                    X = cl.getGroup(op.param1)
                    X.preventJoinByTicket = False
                    cl.updateGroup(X)
                    Ti = cl.reissueGroupTicket(op.param1)
                    cl.acceptGroupInvitationByTicket(op.param1,Ti)
                    ki.acceptGroupInvitationByTicket(op.param1,Ti)
                    kk.acceptGroupInvitationByTicket(op.param1,Ti)
                    kc.acceptGroupInvitationByTicket(op.param1,Ti)
                    ka.acceptGroupInvitationByTicket(op.param1,Ti)
                    G = kc.getGroup(op.param1)
                    G.preventJoinByTicket = True
                    kc.updateGroup(G)
                    Ticket = kc.reissueGroupTicket(op.param1)
                    if op.param2 in wait["blacklist"]:
                        pass
                    if op.param2 in wait["whitelist"]:
                        pass
                    else:
                        wait["blacklist"][op.param2] = True
        if op.type == 13:
                print "Berhasil"
                H = cl.getContact(op.param2).mid
                F = cl.getContact(op.param2).displayName
                Z = cl.getGroup(op.param1).name
                print H
                print F
                target = H
                if H in owner:
                    cl.acceptGroupInvitation(op.param1)
                    print "Accepted invitation by owner"
                    op.param2 in owner
                    A = cl.getGroup(op.param1).id
                    B = cl.getGroup(op.param1).name
                    C = cl.getGroup(op.param1).creator.displayName
                    D = cl.getGroup(op.param1).createdTime
                    E = cl.getGroup(op.param1).pictureStatus
                    Z = cl.getGroup(op.param1).creator.mid
                    print A
                    print B
                    print C
                    print D
                    cl.sendText(op.param2,"Invited by: " + F + "\n ------Group information------ \n" "Group id: " + A + "\n Group name: " + B + " \n Group Creator: " + C + "\n Group Picture: \n http://dl.profile.line.naver.jp/  " + E + " \n -------End-----" )
                elif H in admin:
                    cl.acceptGroupInvitation(op.param1)
                    print "Accepted invitation by admin"
                    op.param2 in owner
                    A = cl.getGroup(op.param1).id
                    B = cl.getGroup(op.param1).name
                    C = cl.getGroup(op.param1).creator.displayName
                    D = cl.getGroup(op.param1).createdTime
                    E = cl.getGroup(op.param1).pictureStatus
                    Z = cl.getGroup(op.param1).creator.mid
                    print A
                    print B
                    print C
                    print D
                    cl.sendText(op.param2,"Invited by: " + F + "\n ------Group information------ \n" "Group id: " + A + "\n Group name: " + B + " \n Group Creator: " + C + "\n Group Picture: \n http://dl.profile.line.naver.jp/" + E + " \n -------End-----" )
                elif H in staff:
                    cl.acceptGroupInvitation(op.param1)
                    print "Accepted invitation by staff"
                    op.param2 in owner
                    A = cl.getGroup(op.param1).id
                    B = cl.getGroup(op.param1).name
                    C = cl.getGroup(op.param1).creator.displayName
                    D = cl.getGroup(op.param1).createdTime
                    E = cl.getGroup(op.param1).pictureStatus
                    Z = cl.getGroup(op.param1).creator.mid
                    print A
                    print B
                    print C
                    print D
                    cl.sendText(op.param2,"Invited by: " + F + "\n ------Group information------ \n" "Group id: " + A + "\n Group name: " + B + " \n Group Creator: " + C + "\n Group Picture: \n http://dl.profile.line.naver.jp/  " + E + " \n -------End-----" )
                else:
                    cl.rejectGroupInvitation(op.param1)
                    print "Rejected2"
                    op.param2 = "u880ee16541e4a34cd0f0dfc6a7e64833"
                    cl.findAndAddContactsByMid(target)

        if op.type == 22:
            if wait["leaveRoom"] == True:
                cl.leaveRoom(op.param1)
        if op.type == 24:
            if wait["leaveRoom"] == True:
                cl.leaveRoom(op.param1)

        #------Cancel User Kick start------#
        if op.type == 32:
            if op.param2 not in Bots or owner or admin or staff:
                try:
                    cl.kickoutFromGroup(op.param1,[op.param2])
                    ki.kickoutFromGroup(op.param1,[op.param2])
                    kk.kickoutFromGroup(op.param1,[op.param2])
                    kc.kickoutFromGroup(op.param1,[op.param2])
                    ka.kickoutFromGroup(op.param1,[op.param2])
                except:
                    pass
        #-----Cancel User Kick Finish------#

            if msg.toType == 1:
                if wait["leaveRoom"] == True:
                    cl.leaveRoom(msg.to)
            if msg.contentType == 16:
                url = msg.contentMetadata("line://home/post?userMid="+mid+"&postId="+"new_post")
                cl.like(url[25:58], url[66:], likeType=1001)
        if op.type == 26:
            msg = op.message
            if msg.contentType == 13:
               if wait["wblack"] == True:
                    if msg.contentMetadata["mid"] in wait["commentBlack"]:
                        cl.sendText(msg.to,"already")
                        wait["wblack"] = False
                    else:
                        wait["commentBlack"][msg.contentMetadata["mid"]] = True
                        wait["wblack"] = False
                        cl.sendText(msg.to,"decided not to comment")

               elif wait["dblack"] == True:
                   if msg.contentMetadata["mid"] in wait["commentBlack"]:
                        del wait["commentBlack"][msg.contentMetadata["mid"]]
                        cl.sendText(msg.to,"deleted")
                        ki.sendText(msg.to,"deleted")
                        kk.sendText(msg.to,"deleted")
                        kc.sendText(msg.to,"deleted")
                        ka.sendText(msg.to,"deleted")
                        wait["dblack"] = False

                   else:
                        wait["dblack"] = False
                        cl.sendText(msg.to,"It is not in the black list")
                        ki.sendText(msg.to,"It is not in the black list")
                        kk.sendText(msg.to,"It is not in the black list")
                        kc.sendText(msg.to,"It is not in the black list")
                        ka.sendText(msg.to,"It is not in the black list")
               elif wait["wblacklist"] == True:
                   if msg.contentMetadata["mid"] in wait["blacklist"]:
                        cl.sendText(msg.to,"already")
                        ki.sendText(msg.to,"already")
                        kk.sendText(msg.to,"already")
                        kc.sendText(msg.to,"already")
                        ka.sendText(msg.to,"already")                   
                        wait["wblacklist"] = False
                   else:
                        wait["blacklist"][msg.contentMetadata["mid"]] = True
                        wait["wblacklist"] = False
                        cl.sendText(msg.to,"aded")
                        ki.sendText(msg.to,"aded")
                        kk.sendText(msg.to,"aded")
                        kc.sendText(msg.to,"aded")
                        ka.sendText(msg.to,"aded")

               elif wait["dblacklist"] == True:
                   if msg.contentMetadata["mid"] in wait["blacklist"]:
                        del wait["blacklist"][msg.contentMetadata["mid"]]
                        cl.sendText(msg.to,"deleted")
                        ki.sendText(msg.to,"deleted")
                        kk.sendText(msg.to,"deleted")
                        kc.sendText(msg.to,"deleted")
                        ka.sendText(msg.to,"deleted")
                        wait["dblacklist"] = False

                   else:
                        wait["dblacklist"] = False
                        cl.sendText(msg.to,"It is not in the black list")
                        ki.sendText(msg.to,"It is not in the black list")
                        kk.sendText(msg.to,"It is not in the black list")
                        kc.sendText(msg.to,"It is not in the black list")
                        ka.sendText(msg.to,"It is not in the black list")
               elif wait["contact"] == False:
                    msg.contentType = 0
                    cl.sendText(msg.to,msg.contentMetadata["mid"])
                    if 'displayName' in msg.contentMetadata:
                        contact = cl.getContact(msg.contentMetadata["mid"])
                        try:
                            cu = cl.channel.getCover(msg.contentMetadata["mid"])
                        except:
                            cu = ""
                        cl.sendText(msg.to,"[displayName]:\n" + msg.contentMetadata["displayName"] + "\n[mid]:\n" + msg.contentMetadata["mid"] + "\n[statusMessage]:\n" + contact.statusMessage + "\n[pictureStatus]:\nhttp://dl.profile.line-cdn.net/" + contact.pictureStatus + "\n[coverURL]:\n" + str(cu))
                    else:
                        contact = cl.getContact(msg.contentMetadata["mid"])
                        try:
                            cu = cl.channel.getCover(msg.contentMetadata["mid"])
                        except:
                            cu = ""
                        cl.sendText(msg.to,"[displayName]:\n" + contact.displayName + "\n[mid]:\n" + msg.contentMetadata["mid"] + "\n[statusMessage]:\n" + contact.statusMessage + "\n[pictureStatus]:\nhttp://dl.profile.line-cdn.net/" + contact.pictureStatus + "\n[coverURL]:\n" + str(cu))
            elif msg.contentType == 16:
                if wait["timeline"] == True:
                    msg.contentType = 0
                    if wait["lang"] == "JP":
                        msg.text = "post URL\n" + msg.contentMetadata["postEndUrl"]
                    else:
                        msg.text = "URLÃ¢â€ â€™\n" + msg.contentMetadata["postEndUrl"]
                    cl.sendText(msg.to,msg.text)
            elif msg.text is None:
                return
            elif msg.text in ["Key","help","Help"]:
                print "Succes"
                if msg.from_ in admin or owner:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,helpMessage)
                    else:
                        cl.sendText(msg.to,helpMessage)
            elif msg.text in ["SetGroup"]:
              if msg.from_ in admin:
                if wait["lang"] == "JP":
                    cl.sendText(msg.to,Setgroup)
                else:
                    cl.sendText(msg.to,Sett)
            elif ("Gn " in msg.text):
                if msg.toType == 2:
                    X = cl.getGroup(msg.to)
                    X.name = msg.text.replace("Gn ","")
                    cl.updateGroup(X)
                else:
                    cl.sendText(msg.to,"It can't be used besides the group.")
            elif ("Bot2 gn " in msg.text):
                if msg.toType == 2:
                    X = cl.getGroup(msg.to)
                    X.name = msg.text.replace("Bot2 gn ","")
                    ki.updateGroup(X)
                else:
                    ki.sendText(msg.to,"It can't be used besides the group.")
            elif ("Bot3 gn " in msg.text):
                if msg.toType == 2:
                    X = cl.getGroup(msg.to)
                    X.name = msg.text.replace("Bot3 gn ","")
                    kk.updateGroup(X)
                else:
                    kk.sendText(msg.to,"It can't be used besides the group.")
            elif ("Bot4 gn " in msg.text):
                if msg.toType == 2:
                    X = cl.getGroup(msg.to)
                    X.name = msg.text.replace("Bot4 gn ","")
                    kc.updateGroup(X)
                else:
                    kc.sendText(msg.to,"It can't be used besides the group.")
            elif ("Bot5 gn " in msg.text):
                if msg.toType == 2:
                    X = cl.getGroup(msg.to)
                    X.name = msg.text.replace("Bot5 gn ","")
                    ka.updateGroup(X)
                else:
                    ka.sendText(msg.to,"It can't be used besides the group.")
            elif "Kick " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Kick ","")
                    cl.kickoutFromGroup(msg.to,[midd])
            elif "Bot2 kick " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot2 kick ","")
                    ki.kickoutFromGroup(msg.to,[midd])
            elif "Bot3 kick " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot3 kick ","")
                    kk.kickoutFromGroup(msg.to,[midd])
            elif "Bot4 kick " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot4 kick ","")
                    kc.kickoutFromGroup(msg.to,[midd])
            elif "Bot5 kick " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot5 kick ","")
                    ka.kickoutFromGroup(msg.to,[midd])
            elif "Invite " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Invite ","")
                    cl.findAndAddContactsByMid(midd)
                    cl.inviteIntoGroup(msg.to,[midd])
            elif "Bot2 invite " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot2 invite ","")
                    ki.findAndAddContactsByMid(midd)
                    ki.inviteIntoGroup(msg.to,[midd])
            elif "Bot3 invite " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot3 invite ","")
                    kk.findAndAddContactsByMid(midd)
                    kk.inviteIntoGroup(msg.to,[midd])
            elif "Bot4 invite " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot4 invite ","")
                    kc.findAndAddContactsByMid(midd)
                    kc.inviteIntoGroup(msg.to,[midd])
            elif "Bot5 invite " in msg.text:
                if msg.from_ in owner or admin:
                    midd = msg.text.replace("Bot5 invite ","")
                    ka.findAndAddContactsByMid(midd)
                    ka.inviteIntoGroup(msg.to,[midd])
            elif msg.text in ["Bot?"]:
                if msg.from_ in admin or staff:
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': mid}
                    cl.sendMessage(msg)

                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Amid}
                    ki.sendMessage(msg)
    
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Bmid}
                    kk.sendMessage(msg)
    
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Cmid}
                    kc.sendMessage(msg)
                    
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Dmid}
                    ka.sendMessage(msg)
            elif msg.text in ["Bot1"]:
                if msg.from_ in admin or staff:
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': mid}
                    cl.sendMessage(msg)
            elif msg.text in ["Bot2"]:
                if msg.from_ in admin or staff:
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Amid}
                    ki.sendMessage(msg)
            elif msg.text in ["Bot3"]:
                if msg.from_ in admin or staff:
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Bmid}
                    kk.sendMessage(msg)
            elif msg.text in ["Bot4"]:
                if msg.from_ in admin or staff:
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Cmid}
                    kc.sendMessage(msg)
            elif msg.text in ["Bot5"]:
                if msg.from_ in admin or staff:
                    msg.contentType = 13
                    msg.contentMetadata = {'mid': Dmid}
                    ka.sendMessage(msg)
            elif msg.text in ["Ã¦â€žâ€ºÃ£ï¿½Â®Ã£Æ’â€”Ã£Æ’Â¬Ã£â€šÂ¼Ã£Æ’Â³Ã£Æ’Ë†","Gift"]:
                if msg.from_ in admin:
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': 'a0768339-c2d3-4189-9653-2909e9bb6f58',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '5'}
                    msg.text = None
                    cl.sendMessage(msg)
            elif msg.text in ["Ã¦â€žâ€ºÃ£ï¿½Â®Ã£Æ’â€”Ã£Æ’Â¬Ã£â€šÂ¼Ã£Æ’Â³Ã£Æ’Ë†","Bot1 gift"]:
                if msg.from_ in admin:
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': 'a0768339-c2d3-4189-9653-2909e9bb6f58',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '6'}
                    msg.text = None
                    ki.sendMessage(msg)
            elif msg.text in ["Ã¦â€žâ€ºÃ£ï¿½Â®Ã£Æ’â€”Ã£Æ’Â¬Ã£â€šÂ¼Ã£Æ’Â³Ã£Æ’Ë†","Bot2 gift"]:
                if msg.from_ in admin:
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': 'a0768339-c2d3-4189-9653-2909e9bb6f58',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '8'}
                    msg.text = None
                    kk.sendMessage(msg)
            elif msg.text in ["Ã¦â€žâ€ºÃ£ï¿½Â®Ã£Æ’â€”Ã£Æ’Â¬Ã£â€šÂ¼Ã£Æ’Â³Ã£Æ’Ë†","Bot3 gift"]:
                if msg.from_ in admin:
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': 'a0768339-c2d3-4189-9653-2909e9bb6f58',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '10'}
                    msg.text = None
                    kc.sendMessage(msg)
            elif msg.text in ["Ã¦â€žâ€ºÃ£ï¿½Â®Ã£Æ’â€”Ã£Æ’Â¬Ã£â€šÂ¼Ã£Æ’Â³Ã£Æ’Ë†","Bot4 gift"]:
                if msg.from_ in admin:
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': 'a0768339-c2d3-4189-9653-2909e9bb6f58',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '10'}
                    msg.text = None
                    ka.sendMessage(msg)
            elif msg.text in ["Ã¦â€žâ€ºÃ£ï¿½Â®Ã£Æ’â€”Ã£Æ’Â¬Ã£â€šÂ¼Ã£Æ’Â³Ã£Æ’Ë†","All gift"]:
                if msg.from_ in admin:
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': 'a0768339-c2d3-4189-9653-2909e9bb6f58',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '12'}
                    msg.text = None
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
                    kc.sendMessage(msg)
                    ka.sendMessage(msg)
            if msg.text in ["Cancel","cancel"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = cl.getGroup(msg.to)
                        if X.invitee is not None:
                            gInviMids = [contact.mid for contact in X.invitee]
                            cl.cancelGroupInvitation(msg.to, gInviMids)
                        else:
                            if wait["lang"] == "JP":
                                cl.sendText(msg.to,"No one is inviting")
                            else:
                                cl.sendText(msg.to,"Sorry, nobody absent")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can not be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot cancel","Bot cancel"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        G = ki.getGroup(msg.to)
                        if G.invitee is not None:
                            gInviMids = [contact.mid for contact in G.invitee]
                            ki.cancelGroupInvitation(msg.to, gInviMids)
                        else:
                            if wait["lang"] == "JP":
                                ki.sendText(msg.to,"No one is inviting")
                            else:
                                ki.sendText(msg.to,"Sorry, nobody absent")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        ki.sendText(msg.to,"Can not be used outside the group")
                    else:
                        ki.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Open Url","open url","Ourl","ourl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = cl.getGroup(msg.to)
                        X.preventJoinByTicket = False
                        cl.updateGroup(X)
                        if wait["lang"] == "JP":
                            cl.sendText(msg.to,"Invite by link open")
                        else:
                            cl.sendText(msg.to,"Already open")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")        
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can not be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot1 ourl","Bot1 link on"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = cl.getGroup(msg.to)
                        X.preventJoinByTicket = False
                        ki.updateGroup(X)
                        if wait["lang"] == "JP":
                            ki.sendText(msg.to,"Done Sir")
                        else:
                            ki.sendText(msg.to,"already open")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can not be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot2 ourl","Bot2 link on"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = kk.getGroup(msg.to)
                        X.preventJoinByTicket = False
                        kk.updateGroup(X)
                        if wait["lang"] == "JP":
                            kk.sendText(msg.to,"Done Sir")
                        else:
                            kk.sendText(msg.to,"already open")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")        
                else:
                    if wait["lang"] == "JP":
                        kk.sendText(msg.to,"Can not be used outside the group")
                    else:
                        kk.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot3 ourl","Bot3 link on"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = kc.getGroup(msg.to)
                        X.preventJoinByTicket = False
                        kc.updateGroup(X)
                        if wait["lang"] == "JP":
                            kc.sendText(msg.to,"Done Sir")
                        else:
                            kc.sendText(msg.to,"already open")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.") 
                else:
                    if wait["lang"] == "JP":
                        kc.sendText(msg.to,"Can not be used outside the group")
                    else:
                        kc.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot4 ourl","Bot4 link on"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = ka.getGroup(msg.to)
                        X.preventJoinByTicket = False
                        ka.updateGroup(X)
                        if wait["lang"] == "JP":
                            ka.sendText(msg.to,"Done Sir")
                        else:
                            ka.sendText(msg.to,"already open")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")        
                else:
                    if wait["lang"] == "JP":
                        ka.sendText(msg.to,"Can not be used outside the group")
                    else:
                        ka.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Close Url","close url","Curl","curl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = cl.getGroup(msg.to)
                        X.preventJoinByTicket = True
                        cl.updateGroup(X)
                        if wait["lang"] == "JP":
                            cl.sendText(msg.to,"Invite by link Close")
                        else:
                            cl.sendText(msg.to,"Already close")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can not be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot1 curl","Bot1 link off"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = ki.getGroup(msg.to)
                        X.preventJoinByTicket = True
                        ki.updateGroup(X)
                        if wait["lang"] == "JP":
                            ki.sendText(msg.to,"Done Sir")
                        else:
                            ki.sendText(msg.to,"already close")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        ki.sendText(msg.to,"Can not be used outside the group")
                    else:
                        ki.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot2 curl","Bot2 link off"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = kk.getGroup(msg.to)
                        X.preventJoinByTicket = True
                        kk.updateGroup(X)
                        if wait["lang"] == "JP":
                            kk.sendText(msg.to,"Done Sir")
                        else:
                            kk.sendText(msg.to,"already close")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        kk.sendText(msg.to,"Can not be used outside the group")
                    else:
                        kk.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot3 curl","Bot3 link off"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = kc.getGroup(msg.to)
                        X.preventJoinByTicket = True
                        kc.updateGroup(X)
                        if wait["lang"] == "JP":
                            kc.sendText(msg.to,"Done Sir")
                        else:
                            kc.sendText(msg.to,"already close")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        kc.sendText(msg.to,"Can not be used outside the group")
                    else:
                        kc.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot4 curl","Bot4 link off"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        X = ka.getGroup(msg.to)
                        X.preventJoinByTicket = True
                        ka.updateGroup(X)
                        if wait["lang"] == "JP":
                            ka.sendText(msg.to,"Done Sir")
                        else:
                            ka.sendText(msg.to,"already close")
                    else:
                        cl.sendText(msg.to,"Admins or Staffs permission required.")
                else:
                    if wait["lang"] == "JP":
                        ka.sendText(msg.to,"Can not be used outside the group")
                    else:
                        ka.sendText(msg.to,"Not for use less than group")
            elif "jointicket " in msg.text.lower():
		rplace=msg.text.lower().replace("jointicket ")
		if rplace == "on":
			wait["atjointicket"]=True
		elif rplace == "off":
			wait["atjointicket"]=False
		cl.sendText(msg.to,"Auto Join Group by Ticket is %s" % str(wait["atjointicket"]))
            elif '/ti/g/' in msg.text.lower():
		link_re = re.compile('(?:line\:\/|line\.me\/R)\/ti\/g\/([a-zA-Z0-9_-]+)?')
		links = link_re.findall(msg.text)
		n_links=[]
		for l in links:
			if l not in n_links:
				n_links.append(l)
		for ticket_id in n_links:
			if wait["atjointicket"] == True:
				group=cl.findGroupByTicket(msg.to,ticket_id)
				cl.acceptGroupInvitationByTicket(group.mid,ticket_id)
				cl.sendText(msg.to,"Sukses join ke grup %s" % str(group.name))
            elif msg.text == "Ginfo":
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        ginfo = cl.getGroup(msg.to)
                        try:
                            gCreator = ginfo.creator.displayName
                        except:
                            gCreator = "Error"
                        if wait["lang"] == "JP":
                            if ginfo.invitee is None:
                                sinvitee = "0"
                            else:
                                sinvitee = str(len(ginfo.invitee))
                            if ginfo.preventJoinByTicket == True:
                                u = "close"
                            else:
                                u = "open"
                            cl.sendText(msg.to,"[group name]\n" + str(ginfo.name) + "\n[gid]\n" + msg.to + "\n[group creator]\n" + gCreator + "\n[profile status]\nhttp://dl.profile.line.naver.jp/" + ginfo.pictureStatus + "\nmembers:" + str(len(ginfo.members)) + "members\npending:" + sinvitee + "people\nURL:" + u + "it is inside")
                        else:
                            cl.sendText(msg.to,"[group name]\n" + str(ginfo.name) + "\n[gid]\n" + msg.to + "\n[group creator]\n" + gCreator + "\n[profile status]\nhttp://dl.profile.line.naver.jp/" + ginfo.pictureStatus)
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can not be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif "Id Group" == msg.text:
                if msg.from_ in admin:
                    cl.sendText(msg.to,msg.to)
            elif "Mid RA" == msg.text:
                if msg.from_ in admin:
                    cl.sendText(msg.to,mid)
                    ki.sendText(msg.to,Amid)
                    kk.sendText(msg.to,Bmid)
                    kc.sendText(msg.to,Cmid)
                    ka.sendText(msg.to,Dmid)
            elif "RA 1" == msg.text:
                if msg.from_ in admin:
                    cl.sendText(msg.to,mid)
            elif "RA 2" == msg.text:
                if msg.from_ in admin:
                    ki.sendText(msg.to,Amid)
            elif "RA 3" == msg.text:
                if msg.from_ in admin:
                    kk.sendText(msg.to,Bmid)
            elif "RA 4" == msg.text:
                if msg.from_ in admin:
                    kc.sendText(msg.to,Cmid)
            elif "RA 5" == msg.text:
                if msg.from_ in admin:
                    ka.sendText(msg.to,Dmid)
            elif msg.text in ["Wkwkwk","Wkwk","Wk","wkwkwk","wkwk","wk"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "100",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    cl.sendMessage(msg)
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Hehehe","Hehe","He","hehehe","hehe","he"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "10",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Galon"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "9",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["You"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "7",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Hadeuh"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "6",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Please"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "4",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Haaa"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "3",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Lol"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "110",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["Hmmm","Hmm","Hm","hmmm","hmm","hm"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "101",
                                     "STKPKGID": "1",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
            elif msg.text in ["Welcome"]:
                if msg.from_ in admin:
                    msg.contentType = 7
                    msg.text = None
                    msg.contentMetadata = {
                                     "STKID": "247",
                                     "STKPKGID": "3",
                                     "STKVER": "100" }
                    ki.sendMessage(msg)
                    kk.sendMessage(msg)
            elif msg.text in ["TL:"]:
                tl_text = msg.text.replace("TL:","")
                cl.sendText(msg.to,"line://home/post?userMid="+mid+"&postId="+cl.new_post(tl_text)["result"]["post"]["postInfo"]["postId"])
                
            elif msg.text in ["Mc "]:
                mmid = msg.text.replace("Mc ","")
                msg.contentType = 13
                msg.contentMetadata = {"mid":mmid}
                cl.sendMessage(msg)
            elif msg.text in ["Guest On","guest on"]:
              if msg.from_ in admin:
                if wait["Protectguest"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Guest Stranger On")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["Protectguest"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Guest Stranger On")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Guest Off","guest off"]:
              if msg.from_ in admin:
                if wait["Protectguest"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Guest Stranger Off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["Protectguest"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Guest Stranger Off")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Qr on","qr on"]:
              if msg.from_ in admin:
                if wait["ProtectQR"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Protect QR On")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["ProtectQR"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Protect QR On")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Qr off","qr off"]:
              if msg.from_ in admin:
                if wait["ProtectQR"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Protect QR Off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["ProtectQR"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Protect QR Off")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Contact On","Contact on","contact on"]:
              if msg.from_ in admin:
                if wait["contact"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Cek Mid Send Contact On")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["contact"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Cek Mid Send Contact On")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Contact Off","Contact off","contact off"]:
              if msg.from_ in admin:
                if wait["contact"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Cek Mid Send Contact Off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["contact"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Cek Mid Send Contact Off")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¥ï¿½â€šÃ¥Å  :Ã£â€šÂªÃ£Æ’Â³","Join on","Auto join:on","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¥ï¿½Æ’Ã¥Å  Ã¯Â¼Å¡Ã©â€“â€¹"]:
                if wait["autoJoin"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already on")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["autoJoin"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already on")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¥ï¿½â€šÃ¥Å  :Ã£â€šÂªÃ£Æ’â€¢","Join off","Auto join:off","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¥ï¿½Æ’Ã¥Å  Ã¯Â¼Å¡Ã©â€”Å“"]:
                if wait["autoJoin"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["autoJoin"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already off")
                    else:
                        cl.sendText(msg.to,"done")
            elif msg.text in ["Gcancel:"]:
                try:
                    strnum = msg.text.replace("Gcancel:","")
                    if strnum == "off":
                        wait["autoCancel"]["on"] = False
                        if wait["lang"] == "JP":
                            cl.sendText(msg.to,"Invitation refused turned off\nTo turn on please specify the number of people and send")
                        else:
                            cl.sendText(msg.to,"Ã¥â€¦Â³Ã¤Âºâ€ Ã©â€šâ‚¬Ã¨Â¯Â·Ã¦â€¹â€™Ã§Â»ï¿½Ã£â‚¬â€šÃ¨Â¦ï¿½Ã¦â€”Â¶Ã¥Â¼â‚¬Ã¨Â¯Â·Ã¦Å’â€¡Ã¥Â®Å¡Ã¤ÂºÂºÃ¦â€¢Â°Ã¥ï¿½â€˜Ã©â‚¬ï¿½")
                    else:
                        num =  int(strnum)
                        wait["autoCancel"]["on"] = True
                        if wait["lang"] == "JP":
                            cl.sendText(msg.to,strnum + "The group of people and below decided to automatically refuse invitation")
                        else:
                            cl.sendText(msg.to,strnum + "Ã¤Â½Â¿Ã¤ÂºÂºÃ¤Â»Â¥Ã¤Â¸â€¹Ã§Å¡â€žÃ¥Â°ï¿½Ã§Â»â€žÃ§â€Â¨Ã¨â€¡ÂªÃ¥Å Â¨Ã©â€šâ‚¬Ã¨Â¯Â·Ã¦â€¹â€™Ã§Â»ï¿½")
                except:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Value is wrong")
                    else:
                        cl.sendText(msg.to,"Bizarre ratings")
            elif msg.text in ["Ã¥Â¼Â·Ã¥Ë†Â¶Ã¨â€¡ÂªÃ¥â€¹â€¢Ã©â‚¬â‚¬Ã¥â€¡Âº:Ã£â€šÂªÃ£Æ’Â³","Leave on","Auto leave:on","Ã¥Â¼Â·Ã¥Ë†Â¶Ã¨â€¡ÂªÃ¥â€¹â€¢Ã©â‚¬â‚¬Ã¥â€¡ÂºÃ¯Â¼Å¡Ã©â€“â€¹"]:
                if wait["leaveRoom"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already on")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["leaveRoom"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥Â¼â‚¬Ã£â‚¬â€š")
            elif msg.text in ["Ã¥Â¼Â·Ã¥Ë†Â¶Ã¨â€¡ÂªÃ¥â€¹â€¢Ã©â‚¬â‚¬Ã¥â€¡Âº:Ã£â€šÂªÃ£Æ’â€¢","Leave off","Auto leave:off","Ã¥Â¼Â·Ã¥Ë†Â¶Ã¨â€¡ÂªÃ¥â€¹â€¢Ã©â‚¬â‚¬Ã¥â€¡ÂºÃ¯Â¼Å¡Ã©â€”Å“"]:
                if wait["leaveRoom"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["leaveRoom"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"already")
            elif msg.text in ["Ã¥â€¦Â±Ã¦Å“â€°:Ã£â€šÂªÃ£Æ’Â³","Share on","Share on"]:
                if wait["timeline"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already on")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["timeline"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥Â¼â‚¬Ã£â‚¬â€š")
            elif msg.text in ["Ã¥â€¦Â±Ã¦Å“â€°:Ã£â€šÂªÃ£Æ’â€¢","Share off","Share off"]:
                if wait["timeline"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["timeline"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥â€¦Â³Ã¦â€“Â­Ã£â‚¬â€š")
            elif msg.text in ["Set View"]:
                md = ""
                if wait["Protectcancel"] == True: md+=" Protect Cancel : on\n"
                else: md+=" Protect Cancel : off\n"
                if wait["ProtectQR"] == True: md+=" Protect Qr      : on\n"
                else: md+=" Protect Qr   : off\n"
                if wait["Protectguest"] == True: md+=" Block Invite : on\n"
                else: md+=" Block Invite : off\n"
                if wait["contact"] == True: md+=" Contact    : on\n"
                else: md+=" Contact    : off\n"
                if wait["autoJoin"] == True: md+=" Auto join : on\n"
                else: md +=" Auto join : off\n"
                if wait["autoCancel"]["on"] == True:md+=" Group cancel :" + str(wait["autoCancel"]["members"]) + "\n"
                else: md+= " Group cancel : off\n"
                if wait["leaveRoom"] == True: md+=" Auto leave    : on\n"
                else: md+=" Auto leave : off\n"
                if wait["timeline"] == True: md+=" Share   : on\n"
                else:md+=" Share   : off\n"
                if wait["autoAdd"] == True: md+=" Auto add : on\n"
                else:md+=" Auto add : off\n"
                if wait["commentOn"] == True: md+=" Comment : on\n"
                else:md+=" Comment : off\n"
                cl.sendText(msg.to,md)
            elif "album merit " in msg.text:
                gid = msg.text.replace("album merit ","")
                album = cl.getAlbum(gid)
                if album["result"]["items"] == []:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"There is no album")
                    else:
                        cl.sendText(msg.to,"Ã§â€ºÂ¸Ã¥â€ Å’Ã¦Â²Â¡Ã¥Å“Â¨Ã£â‚¬â€š")
                else:
                    if wait["lang"] == "JP":
                        mg = "The following is the target album"
                    else:
                        mg = "Ã¤Â»Â¥Ã¤Â¸â€¹Ã¦ËœÂ¯Ã¥Â¯Â¹Ã¨Â±Â¡Ã§Å¡â€žÃ§â€ºÂ¸Ã¥â€ Å’"
                    for y in album["result"]["items"]:
                        if "photoCount" in y:
                            mg += str(y["title"]) + ":" + str(y["photoCount"]) + "sheet\n"
                        else:
                            mg += str(y["title"]) + ":0sheet\n"
                    cl.sendText(msg.to,mg)
            elif "album " in msg.text:
                gid = msg.text.replace("album ","")
                album = cl.getAlbum(gid)
                if album["result"]["items"] == []:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"There is no album")
                    else:
                        cl.sendText(msg.to,"Ã§â€ºÂ¸Ã¥â€ Å’Ã¦Â²Â¡Ã¥Å“Â¨Ã£â‚¬â€š")
                else:
                    if wait["lang"] == "JP":
                        mg = "The following is the target album"
                    else:
                        mg = "Ã¤Â»Â¥Ã¤Â¸â€¹Ã¦ËœÂ¯Ã¥Â¯Â¹Ã¨Â±Â¡Ã§Å¡â€žÃ§â€ºÂ¸Ã¥â€ Å’"
                    for y in album["result"]["items"]:
                        if "photoCount" in y:
                            mg += str(y["title"]) + ":" + str(y["photoCount"]) + "sheet\n"
                        else:
                            mg += str(y["title"]) + ":0sheet\n"
            elif "album remove " in msg.text:
                gid = msg.text.replace("album remove ","")
                albums = cl.getAlbum(gid)["result"]["items"]
                i = 0
                if albums != []:
                    for album in albums:
                        cl.deleteAlbum(gid,album["id"])
                        i += 1
                if wait["lang"] == "JP":
                    cl.sendText(msg.to,str(i) + "Deleted albums")
                else:
                    cl.sendText(msg.to,str(i) + "Ã¥Ë† Ã©â„¢Â¤Ã¤Âºâ€ Ã¤Âºâ€¹Ã§Å¡â€žÃ§â€ºÂ¸Ã¥â€ Å’Ã£â‚¬â€š")
            elif msg.text in ["Group id","Ã§Â¾Â¤Ã§Âµâ€žÃ¥â€¦Â¨id"]:
                gid = cl.getGroupIdsJoined()
                h = ""
                for i in gid:
                    h += "[%s]:%s\n" % (cl.getGroup(i).name,i)
                cl.sendText(msg.to,h)
            elif msg.text in ["Cancelall"]:
                gid = cl.getGroupIdsInvited()
                for i in gid:
                    cl.rejectGroupInvitation(i)
                if wait["lang"] == "JP":
                    cl.sendText(msg.to,"All invitations have been refused")
                else:
                    cl.sendText(msg.to,"Ã¦â€¹â€™Ã§Â»ï¿½Ã¤Âºâ€ Ã¥â€¦ï¿½ï¿½Ã©Æ’Â¨Ã§Å¡â€žÃ©â€šâ‚¬Ã¨Â¯Â·Ã£â‚¬â€š")
            elif "album removeatâ€™" in msg.text:
                gid = msg.text.replace("album removeatâ€™","")
                albums = cl.getAlbum(gid)["result"]["items"]
                i = 0
                if albums != []:
                    for album in albums:
                        cl.deleteAlbum(gid,album["id"])
                        i += 1
                if wait["lang"] == "JP":
                    cl.sendText(msg.to,str(i) + "Albums deleted")
                else:
                    cl.sendText(msg.to,str(i) + "Ã¥Ë† Ã©â„¢Â¤Ã¤Âºâ€ Ã¤Âºâ€¹Ã§Å¡â€žÃ§â€ºÂ¸Ã¥â€ Å’Ã£â‚¬â€š")
            elif msg.text in ["Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¨Â¿Â½Ã¥Å  :Ã£â€šÂªÃ£Æ’Â³","Add on","Auto add:on","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¨Â¿Â½Ã¥Å  Ã¯Â¼Å¡Ã©â€“â€¹"]:
                if wait["autoAdd"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already on")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["autoAdd"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥Â¼â‚¬Ã£â‚¬â€š")
            elif msg.text in ["Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¨Â¿Â½Ã¥Å  :Ã£â€šÂªÃ£Æ’â€¢","Add off","Auto add:off","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¨Â¿Â½Ã¥Å  Ã¯Â¼Å¡Ã©â€”Å“"]:
                if wait["autoAdd"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"already off")
                    else:
                        cl.sendText(msg.to,"done")
                else:
                    wait["autoAdd"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥â€¦Â³Ã¦â€“Â­Ã£â‚¬â€š")
            elif "Message change: " in msg.text:
                wait["message"] = msg.text.replace("Message change: ","")
                cl.sendText(msg.to,"message changed")
            elif "Message add: " in msg.text:
                wait["message"] = msg.text.replace("Message add: ","")
                if wait["lang"] == "JP":
                    cl.sendText(msg.to,"message changed")
                else:
                    cl.sendText(msg.to,"doneÃ£â‚¬â€š")
            elif msg.text in ["Message","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã¨Â¿Â½Ã¥Å  Ã¥â€¢ï¿½Ã¥â‚¬â„¢Ã¨ÂªÅ¾Ã§Â¢ÂºÃ¨Âªï¿½"]:
                if wait["lang"] == "JP":
                    cl.sendText(msg.to,"message change to\n\n" + wait["message"])
                else:
                    cl.sendText(msg.to,"The automatic appending information is set as followsÃ£â‚¬â€š\n\n" + wait["message"])
            elif "Comment:" in msg.text:
                c = msg.text.replace("Comment:","")
                if c in [""," ","\n",None]:
                    cl.sendText(msg.to,"message changed")
                else:
                    wait["comment"] = c
                    cl.sendText(msg.to,"changed\n\n" + c)
            elif "Add comment:" in msg.text:
                c = msg.text.replace("Add comment:","")
                if c in [""," ","\n",None]:
                    cl.sendText(msg.to,"String that can not be changed")
                else:
                    wait["comment"] = c
                    cl.sendText(msg.to,"changed\n\n" + c)
            elif msg.text in ["Ã£â€šÂ³Ã£Æ’Â¡Ã£Æ’Â³Ã£Æ’Ë†:Ã£â€šÂªÃ£Æ’Â³","Comment on","Comment:on","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã©Â¦â€“Ã© ï¿½Ã§â€¢â„¢Ã¨Â¨â‚¬Ã¯Â¼Å¡Ã©â€“â€¹"]:
                if wait["commentOn"] == True:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"already on")
                else:
                    wait["commentOn"] = True
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥Â¼â‚¬Ã£â‚¬â€š")
            elif msg.text in ["Ã£â€šÂ³Ã£Æ’Â¡Ã£Æ’Â³Ã£Æ’Ë†:Ã£â€šÂªÃ£Æ’â€¢","Comment on","Comment off","Ã¨â€¡ÂªÃ¥â€¹â€¢Ã©Â¦â€“Ã© ï¿½Ã§â€¢â„¢Ã¨Â¨â‚¬Ã¯Â¼Å¡Ã©â€”Å“"]:
                if wait["commentOn"] == False:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"already off")
                else:
                    wait["commentOn"] = False
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"done")
                    else:
                        cl.sendText(msg.to,"Ã¨Â¦ï¿½Ã¤Âºâ€ Ã¥â€¦Â³Ã¦â€“Â­Ã£â‚¬â€š")
            elif msg.text in ["Comment","Ã§â€¢â„¢Ã¨Â¨â‚¬Ã§Â¢ÂºÃ¨Âªï¿½"]:
                cl.sendText(msg.to,"message changed to\n\n" + str(wait["comment"]))
            elif msg.text in ["Gurl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        x = cl.getGroup(msg.to)
                        if x.preventJoinByTicket == True:
                            x.preventJoinByTicket = False
                            cl.updateGroup(x)
                        gurl = cl.reissueGroupTicket(msg.to)
                        cl.sendText(msg.to,"line://ti/g/" + gurl)
                    else:
                        cl.sendText(msg.to,"Admin or staff required")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can't be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot1 gurl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        x = cl.getGroup(msg.to)
                        if x.preventJoinByTicket == True:
                            x.preventJoinByTicket = False
                            ki.updateGroup(x)
                            gurl = ki.reissueGroupTicket(msg.to)
                            ki.sendText(msg.to,"line://ti/g/" + gurl)
                    else:
                        cl.sendText(msg.to,"Admin or staff required")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can't be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot2 gurl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        x = cl.getGroup(msg.to)
                        if x.preventJoinByTicket == True:
                            x.preventJoinByTicket = False
                            kk.updateGroup(x)
                            gurl = kk.reissueGroupTicket(msg.to)
                            kk.sendText(msg.to,"line://ti/g/" + gurl)
                    else:
                        cl.sendText(msg.to,"Admin or staff required")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can't be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot3 gurl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        x = cl.getGroup(msg.to)
                        if x.preventJoinByTicket == True:
                            x.preventJoinByTicket = False
                            kc.updateGroup(x)
                            gurl = kc.reissueGroupTicket(msg.to)
                            kc.sendText(msg.to,"line://ti/g/" + gurl)
                    else:
                        cl.sendText(msg.to,"Admin or staff required")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can't be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Bot4 gurl"]:
                if msg.toType == 2:
                    if msg.from_ in admin or staff:
                        x = cl.getGroup(msg.to)
                        if x.preventJoinByTicket == True:
                            x.preventJoinByTicket = False
                            ka.updateGroup(x)
                            gurl = ka.reissueGroupTicket(msg.to)
                            ka.sendText(msg.to,"line://ti/g/" + gurl)
                    else:
                        cl.sendText(msg.to,"Admin or staff required")
                else:
                    if wait["lang"] == "JP":
                        cl.sendText(msg.to,"Can't be used outside the group")
                    else:
                        cl.sendText(msg.to,"Not for use less than group")
            elif msg.text in ["Comment bl "]:
                wait["wblack"] = True
                cl.sendText(msg.to,"add to comment bl")
            elif msg.text in ["Comment wl "]:
                wait["dblack"] = True
                cl.sendText(msg.to,"wl to comment bl")
            elif msg.text in ["Comment bl confirm"]:
                if wait["commentBlack"] == {}:
                    cl.sendText(msg.to,"confirmed")
                else:
                    cl.sendText(msg.to,"Blacklist")
                    mc = ""
                    for mi_d in wait["commentBlack"]:
                        mc += "" +cl.getContact(mi_d).displayName + "\n"
                    cl.sendText(msg.to,mc)
                    
        #-------------Fungsi Jam on/off Start-------------------#            
            elif msg.text in ["Jam on"]:
                if wait["clock"] == True:
                    kc.sendText(msg.to,"Bot 4 jam on")
                else:
                    wait["clock"] = True
                    now2 = datetime.now()
                    nowT = datetime.strftime(now2,"(%H:%M)")
                    profile = kc.getProfile()
                    profile.displayName = wait["cName4"] + nowT
                    kc.updateProfile(profile)
                    kc.sendText(msg.to,"Jam Selalu On")
            elif msg.text in ["Jam off"]:
                if wait["clock"] == False:
                    kc.sendText(msg.to,"Bot 4 jam off")
                else:
                    wait["clock"] = False
                    kc.sendText(msg.to,"Jam Sedang Off")
         #-------------Fungsi Jam on/off Finish-------------------#    
         
         #-------------Fungsi ganti nama bot----------------------#
            elif "Bot1:" in msg.text:
                string = msg.text.replace("Bot1:","")
                if len(string.decode('utf-8')) <= 20:
                    profile = cl.getProfile()
                    profile.displayName = string
                    cl.updateProfile(profile)
                    cl.sendText(msg.to,"ô€œô€‡”ô¿¿Update NamesðŸ‘‰ " + string + "ðŸ‘ˆ")
            elif "Bot2:" in msg.text:
                string = msg.text.replace("Bot2:","")
                if len(string.decode('utf-8')) <= 20:
                    profile = ki.getProfile()
                    profile.displayName = string
                    ki.updateProfile(profile)
                    ki.sendText(msg.to,"ô€œô€‡”ô¿¿Update NamesðŸ‘‰ " + string + "ðŸ‘ˆ")
            elif "Bot3:" in msg.text:
                string = msg.text.replace("Bot3:","")
                if len(string.decode('utf-8')) <= 20:
                    profile = kk.getProfile()
                    profile.displayName = string
                    kk.updateProfile(profile)
                    kk.sendText(msg.to,"ô€œô€‡”ô¿¿Update NamesðŸ‘‰ " + string + "ðŸ‘ˆ")
            elif "Bot4:" in msg.text:
                string = msg.text.replace("Bot4:","")
                if len(string.decode('utf-8')) <= 20:
                    profile = kc.getProfile()
                    profile.displayName = string
                    kc.updateProfile(profile)
                    kc.sendText(msg.to,"ô€œô€‡”ô¿¿Update NamesðŸ‘‰ " + string + "ðŸ‘ˆ")
            elif "Bot5:" in msg.text:
                string = msg.text.replace("Bot4:","")
                if len(string.decode('utf-8')) <= 20:
                    profile = ka.getProfile()
                    profile.displayName = string
                    ka.updateProfile(profile)
                    ka.sendText(msg.to,"ô€œô€‡”ô¿¿Update NamesðŸ‘‰ " + string + "ðŸ‘ˆ")
         #---------------------------------------------------------------#
            elif "Admin add @" in msg.text:
                if msg.from_ in owner:
                    print "[Command]Admin add executing"
                    _name = msg.text.replace("Admin add @","")
                    _nametarget = _name.rstrip('  ')
                    gs = cl.getGroup(msg.to)
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        ki.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                                if target in admin:
                                    cl.sendText(msg.to,"Admin sudah ada")
                                else:
                                    admin.append(target)
                                    cl.sendText(msg.to,"Admin Ditambahkan")
                            except:
                                pass
                    print "[Command]Admin add executed"
                else:
                    cl.sendText(msg.to,"Command denied.")
                    cl.sendText(msg.to,"Owners permission required.")

            elif "Admin remove @" in msg.text:
                if msg.from_ in owner:
                    print "[Command]Admin remove executing"
                    _name = msg.text.replace("Admin remove @","")
                    _nametarget = _name.rstrip('  ')
                    gs = cl.getGroup(msg.to)
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        ki.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                                if target == "u2b457b1ef8391ee451c9a22c835e1e33" or target == "u880ee16541e4a34cd0f0dfc6a7e64833":
                                    cl.sendText(msg.to,"Tidak bisa menghapus owner")
                                    print "[Command]Admin remove aborted"
                                else:
                                    admin.remove(target)
                                    cl.sendText(msg.to,"Admin Dihapus")
                            except:
                                pass
                    print "[Command]Admin remove executed"
                else:
                    cl.sendText(msg.to,"Command denied.")
                    cl.sendText(msg.to,"Owner permission required.")

            elif msg.text in ["Adminlist","adminlist"]:
                if msg.from_ in admin or owner:
                    if admin == []:
                        cl.sendText(msg.to,"The Adminlist is empty")
                    else:
                        cl.sendText(msg.to,"Tunggu...")
                        mc = ""
                        for mi_d in admin:
                            mc += "Adminlist\n\n" + "->" +cl.getContact(mi_d).displayName + "\n"
                        cl.sendText(msg.to,mc)
                        print "[Command]Adminlist executed"
#-----------------------------------------------------------------#
        #--------------Fungsi staff-------------------------------#
            elif "Staff add @" in msg.text:
                if msg.from_ in admin or owner:
                    print "[Command]Staff add executing"
                    _name = msg.text.replace("Staff add @","")
                    _nametarget = _name.rstrip('  ')
                    gs = cl.getGroup(msg.to)
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        ki.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                                if target in staff:
                                    cl.sendText(msg.to,"Staff sudah ada")
                                else:
                                    staff.append(target)
                                    cl.sendText(msg.to,"Staff Ditambahkan")
                            except:
                                pass
                    print "[Command]Staff add executed"
                else:
                    cl.sendText(msg.to,"Command denied.")
                    cl.sendText(msg.to,"Admin or Owners permission required.")

            elif "Staff remove @" in msg.text:
                if msg.from_ in admin or owner:
                    print "[Command]Staff remove executing"
                    _name = msg.text.replace("Staff remove @","")
                    _nametarget = _name.rstrip('  ')
                    gs = cl.getGroup(msg.to)
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        ki.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                                if target == "u2b457b1ef8391ee451c9a22c835e1e33" or target == "u880ee16541e4a34cd0f0dfc6a7e64833":
                                    cl.sendText(msg.to,"Tidak bisa menghapus owner")
                                    print "[Command]Staff remove aborted"
                                else:
                                    staff.remove(target)
                                    cl.sendText(msg.to,"Staff Dihapus")
                            except:
                                pass
                    print "[Command]Staff remove executed"
                else:
                    cl.sendText(msg.to,"Command denied.")
                    cl.sendText(msg.to,"Admin or Owner permission required.")

            elif msg.text in ["Stafflist","stafflist"]:
                if msg.from_ in admin or owner:
                    if admin == []:
                        cl.sendText(msg.to,"The Stafflist is empty")
                    else:
                        cl.sendText(msg.to,"Tunggu...")
                        mc = ""
                        for mi_d in staff:
                            mc += "Stafflist\n\n" + "->" +cl.getContact(mi_d).displayName + "\n"
                        cl.sendText(msg.to,mc)
                        print "[Command]Stafflist executed"
         
         #-------------Fungsi Change Clock Start------------------#
            elif msg.text in ["Change clock"]:
                n = msg.text.replace("Change clock","")
                if len(n.decode("utf-8")) > 13:
                    cl.sendText(msg.to,"changed")
                else:
                    wait["cName"] = n
                    cl.sendText(msg.to,"changed to\n\n" + n)
         #-------------Fungsi Change Clock Finish-----------------#           
        
         #-------------Fungsi Jam Update Start---------------------#            
            elif msg.text in ["Jam Update"]:
                if wait["clock"] == True:
                    now2 = datetime.now()
                    nowT = datetime.strftime(now2,"(%H:%M)")
                    profile = kc.getProfile()
                    profile.displayName = wait["cName4"] + nowT
                    kc.updateProfile(profile)
                    kc.sendText(msg.to,"Sukses update")
                else:
                    kc.sendText(msg.to,"Aktifkan jam terlebih dulu")
         #-------------Fungsi Jam Update Finish-------------------#

            elif msg.text == "$set":
                    cl.sendText(msg.to, "Check sider")
                    ki.sendText(msg.to, "Check sider")
                    kk.sendText(msg.to, "Check sider")
                    kc.sendText(msg.to, "Check sider")
                    try:
                        del wait2['readPoint'][msg.to]
                        del wait2['readMember'][msg.to]
                    except:
                        pass
                    wait2['readPoint'][msg.to] = msg.id
                    wait2['readMember'][msg.to] = ""
                    wait2['ROM'][msg.to] = {}
                    print wait2
            elif msg.text == "$read":
                    if msg.to in wait2['readPoint']:
                        if wait2["ROM"][msg.to].items() == []:
                            chiya = ""
                        else:
                            chiya = ""
                            for rom in wait2["ROM"][msg.to].items():
                                print rom
                                chiya += rom[1] + "\n"

                        cl.sendText(msg.to, "People who readed %s\nthat's it\n\nPeople who have ignored reads\n%sIt is abnormal â™ª\n\nReading point creation date n time:\n[%s]"  % (wait2['readMember'][msg.to],chiya,setTime[msg.to]))
                    else:
                        cl.sendText(msg.to, "An already read point has not been set.\nã€Œsetã€you can send â™ª read point will be created â™ª")
#-----------------------------------------------

#-----------------------------------------------
         #----------------Fungsi Join Group Start-----------------------#
            elif msg.text in ["All Join","All join","Ikkeh Senpai"]:
              if msg.from_ in admin:
                        G = cl.getGroup(msg.to)
                        ginfo = cl.getGroup(msg.to)
                        G.preventJoinByTicket = False
                        cl.updateGroup(G)
                        invsend = 0
                        Ticket = cl.reissueGroupTicket(msg.to)
                        ki.acceptGroupInvitationByTicket(msg.to,Ticket)
                        time.sleep(0.2)
                        kk.acceptGroupInvitationByTicket(msg.to,Ticket)
                        time.sleep(0.2)
                        kc.acceptGroupInvitationByTicket(msg.to,Ticket)
                        time.sleep(0.2)
                        ka.acceptGroupInvitationByTicket(msg.to,Ticket)
                        time.sleep(0.2)
                        G = cl.getGroup(msg.to)
                        G.preventJoinByTicket = True
                        cl.updateGroup(G)
                        ka.sendText(msg.to, "Kicker Ok")
                        print ("Kicker Ok")
                        G.preventJoinByTicket(G)
                        cl.updateGroup(G)

            elif msg.text in ["Join Bot1","join Bot1","Join bot1","join bot1"]:
              if msg.form_ in admin:
                  X = ki.getGroup(msg.to)
                  X.preventJoinByTicket = False
                  ki.updateGroup(X)
                  invsend = 0
                  Ti = ki.reissueGroupTicket(msg.to)
                  cl.acceptGroupInvitationByTicket(msg.to,Ti)
                  G = ki.getGroup(msg.to)
                  G.preventJoinByTicket = True
                  ki.updateGroup(G)
                  Ticket = ki.reissueGroupTicket(msg.to)

            elif msg.text in ["Join Bot2","join Bot2","Join bot2","join bot2"]:
              if msg.from_ in admin:
                  X = cl.getGroup(msg.to)
                  X.preventJoinByTicket = False
                  cl.updateGroup(X)
                  invsend = 0
                  Ti = cl.reissueGroupTicket(msg.to)
                  ki.acceptGroupInvitationByTicket(msg.to,Ti)
                  G = cl.getGroup(msg.to)
                  G.preventJoinByTicket = True
                  cl.updateGroup(G)
                  Ticket = cl.reissueGroupTicket(msg.to)

            elif msg.text in ["Join Bot3","join Bot3","Join bot3","join bot3"]:
              if msg.from_ in admin:
                  x =cl.getGroup(msg.to)
                  x.preventJoinByYicket = False
                  cl.updateGroup(X)
                  invsend = 0
                  Ti = cl.reissueGroupTicket(msg.to)
                  kk.acceptGroupInvitationByTicket(msg.to,Ti)
                  G = cl.getGroup(msg.to)
                  G.preventJoinByTicket = True
                  cl.updateGroup(G)
                  Ticket = cl.reissueGroupTicket(msg.to)
                  
            elif msg.text in ["Join Bot4","join Bot4","Join bot4","join bot4"]:
              if msg.from_ in admin:
                  x =cl.getGroup(msg.to)
                  x.preventJoinByYicket = False
                  cl.updateGroup(X)
                  invsend = 0
                  Ti = cl.reissueGroupTicket(msg.to)
                  kc.acceptGroupInvitationByTicket(msg.to,Ti)
                  G = cl.getGroup(msg.to)
                  G.preventJoinByTicket = True
                  cl.updateGroup(G)
                  Ticket = cl.reissueGroupTicket(msg.to)
                  
            elif msg.text in ["Join Bot5","join Bot5","Join bot5","join bot5"]:
              if msg.from_ in admin:
                  X = cl.getGroup(msg.to)
                  X.preventJoinByTicket = False
                  cl.updateGroup(X)
                  invsend = 0
                  Ti = cl.reissueGroupTicket(msg.to)
                  ka.acceptGroupInvitationByTicket(msg.to,Ti)
                  G = cl.getGroup(msg.to)
                  G.preventJoinByTicket = True
                  cl.updateGroup(G)
                  Ticket = cl.reissueGroupTicket(msg.to)
    #----------------------Fungsi Join Group Finish---------------#

    #-------------Fungsi Leave Group Start---------------#
            elif msg.text in ["Bye Anjing","Bye all","bye","all bye"]:
                if msg.from_ in admin:
                    if msg.toType == 2:
                        ginfo = cl.getGroup(msg.to)
                        try:
                            ki.leaveGroup(msg.to)
                            kk.leaveGroup(msg.to)
                            kc.leaveGroup(msg.to)
                            ka.leaveGroup(msg.to)
                        except:
                            pass
            
    #-------------Fungsi Leave Group Finish---------------#
    
            elif msg.text in ["Bot1 @bye"]:
				if msg.from_ in admin:
					if msg.toType == 2:
						ginfo = cl.getGroup(msg.to)
						try:
							cl.leaveGroup(msg.to)
						except:
							pass
							
            elif msg.text in ["Bot2 @bye"]:
				if msg.from_ in admin:
					if msg.toType == 2:
						ginfo = cl.getGroup(msg.to)
						try:
							ki.leaveGroup(msg.to)
						except:
							pass
            elif msg.text in ["Bot3 @bye"]:
				if msg.from_ in admin:
					if msg.toType == 2:
						ginfo = cl.getGroup(msg.to)
						try:
							kk.leaveGroup(msg.to)
						except:
							pass
            elif msg.text in ["Bot4 @bye"]:
				if msg.from_ in admin:
					if msg.toType == 2:
						ginfo = cl.getGroup(msg.to)
						try:
							kc.leaveGroup(msg.to)
						except:
							pass
            elif msg.text in ["Bot5 @bye"]:
				if msg.from_ in admin:
					if msg.toType == 2:
						ginfo = cl.getGroup(msg.to)
						try:
							ka.leaveGroup(msg.to)
						except:
							pass
    #---------------------- = NUKE = ------------------
            elif msg.text in ["Nuke","nuke"]:
                if msg.from_ in admin:
                        print "Nuke ok"
                        _name = msg.text.replace("Nuke","")
                        gs = ki.getGroup(msg.to)
                        gs = kk.getGroup(msg.to)
                        gs = kc.getGroup(msg.to)
                        gs = ka.getGroup(msg.to)
                        start = time.time()
                        ki.sendText(msg.to, "Nuke Speed")
                        elapsed_time = time.time() - start
                        ki.sendText(msg.to, "%sseconds" % (elapsed_time))
                        kk.sendText(msg.to, "Nuke Start")
                        kc.sendText(msg.to, "Nuke Proses")
                        ka.sendText(msg.to,"ô€œô€‡”ô¿¿ See You Bitch ô€œô€‡”ô¿¿")
                        targets = []
                        for g in gs.members:
                            if _name in g.displayName:
                                targets.append(g.mid)
                        if targets == []:
                            cl.sendText(msg.to,"Not found.")
                            ki.sendText(msg.to,"Not found.")
                        else:
                            for target in targets:
                                if target not in Bots and admin and owner and staff:
                                    try:
                                        klist=[ki,kk,kc,ka]
                                        kicker=random.choice(klist)
                                        kicker.kickoutFromGroup(msg.to,[target])
                                        print (msg.to,[g.mid])
                                    except:
                                        ki.sendText(msg,to,"Nuke Finish")
                                        ki.sendText(msg,to,"Nuke Succes Bos")
#-------------------- = NUKE FINISH = -----------------------------
    
    #-------------Fungsi Tagall User Start---------------#
            elif msg.text in ["Dor","dor","Ngntd","ngntd","Cum","cum","Tag all"]:
                if msg.from_ in admin or staff:
                    group = cl.getGroup(msg.to)
                    nama = [contact.mid for contact in group.members]
                    cb = ""
                    cb2 = ""
                    strt = int(0)
                    akh = int(0)
                    for md in nama:
                        akh = akh + int(6)
                        cb += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(md)+"},"""
                        strt = strt + int(7)
                        akh = akh + 1
                        cb2 += "@nrik \n"
                    cb = (cb[:int(len(cb)-1)])
                    msg.contentType = 0
                    msg.text = cb2
                    msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                    try:
                        cl.sendMessage(msg)
                    except Exception as error:
                        print error
#-------------------------------------------------------------



         #----------------Fungsi Banned Kick Target Start-----------------------#
            elif msg.text in ["Kill "]:
              if msg.from_ in admin:
                if msg.toType == 2:
                    group = ki.getGroup(msg.to)
                    gMembMids = [contact.mid for contact in group.members]
                    matched_list = []
                    for tag in wait["blacklist"]:
                        matched_list+=filter(lambda str: str == tag, gMembMids)
                    if matched_list == []:
                        kk.sendText(msg.to,"Babay")
                        kc.sendText(msg.to,"Cem macem ô€¨ô€†·devil smileô¿¿")
                        return
                    for jj in matched_list:
                        try:
                            klist=[ki,kk,kc]
                            kicker=random.choice(klist)
                            kicker.kickoutFromGroup(msg.to,[jj])
                            print (msg.to,[jj])
                        except:
                            pass
         #----------------Fungsi Banned Kick Target Finish----------------------#                
            elif "Cleanse" in msg.text:
              if msg.from_ in admin:
                if msg.toType == 2:
                    print "ok"
                    _name = msg.text.replace("Cleanse","")
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    ki.sendText(msg.to,"Pembersihan")
                    targets = []
                    for g in gs.members:
                        if _name in g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        ki.sendText(msg.to,"Not found.")
                        kk.sendText(msg.to,"Not found.")
                        kc.sendText(msg.to,"Not found.")
                        ka.sendText(msg.to,"Not found.")
                    else:
                        for target in targets:
                            try:
                                klist=[ki,kk,kc,ka]
                                kicker=random.choice(klist)
                                kicker.kickoutFromGroup(msg.to,[target])
                                print (msg.to,[g.mid])
                            except:
                                ki.sendText(msg.to,"Group cleanse")
                                kk.sendText(msg.to,"Group cleanse")
                                kc.sendText(msg.to,"Group cleanse")
                                ka.sendText(msg.to,"Group cleanse")
            
        #----------------Fungsi Kick User Target Start----------------------#
            elif "Nk " in msg.text:
                if msg.from_ in admin:
                       nk0 = msg.text.replace("Nk ","")
                       nk1 = nk0.lstrip()
                       nk2 = nk1.replace("@","")
                       nki = nk2.rstrip()
                       _name = nki
                       gs = cl.getGroup(msg.to)
                       targets = []
                       for s in gs.members:
                           if _name in s.displayName:
                              targets.append(s.mid)
                       if targets == []:
                           sendMessage(msg.to,"user does not exist")
                           pass
                       else:
                           for target in targets:
                                try:
                                    klist=[cl,ki,kk,kc,ka]
                                    kicker=random.choice(klist)
                                    kicker.kickoutFromGroup(msg.to,[target])
                                except:
                                    pass
        #----------------Fungsi Kick User Target Finish----------------------#      
            elif "Blacklist @ " in msg.text:
                if msg.from_ in admin:
                    _name = msg.text.replace("Blacklist @ ","")
                    _kicktarget = _name.rstrip(' ')
                    gs = cl.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _kicktarget == g.displayName:
                            targets.append(g.mid)
                            if targets == []:
                                cl.sendText(msg.to,"Not found")
                            else:
                                for target in targets:
                                    try:
                                        wait["blacklist"][target] = True
                                        f=codecs.open('st2__b.json','w','utf-8')
                                        json.dump(wait["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                        cl.sendText(msg.to,"Succes Bot")
                                    except:
                                        cl.sendText(msg.to,"error")
            
            #----------------Fungsi Banned User Target Start-----------------------#
            elif "Banned @" in msg.text:
              if msg.from_ in admin:
                if msg.toType == 2:
                    print "[Banned] Sukses"
                    _name = msg.text.replace("Banned @","")
                    _nametarget = _name.rstrip('  ')
                    gs = cl.getGroup(msg.to)
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        cl.sendText(msg.to,"Dilarang Banned Bot")
                        ki.sendText(msg.to,"Dilarang Banned Bot")
                        kk.sendText(msg.to,"Dilarang Banned Bot")
                        kc.sendText(msg.to,"Dilarang Banned Bot")
                        ka.sendText(msg.to,"Dilarang Banned Bot")
                    else:
                        for target in targets:
                            try:
                                wait["blacklist"][target] = True
                                f=codecs.open('st2__b.json','w','utf-8')
                                json.dump(wait["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                cl.sendText(msg.to,"succes")
                            except:
                                ki.sendText(msg.to,"Error")
            #----------------Fungsi Banned User Target Finish-----------------------# 
            
            #----------------Fungsi Unbanned User Target Start-----------------------#
            elif "Unban @" in msg.text:
              if msg.from_ in admin:
                if msg.toType == 2:
                    print "[Unban] Sukses"
                    _name = msg.text.replace("Unban @","")
                    _nametarget = _name.rstrip('  ')
                    gs = cl.getGroup(msg.to)
                    gs = ki.getGroup(msg.to)
                    gs = kk.getGroup(msg.to)
                    gs = kc.getGroup(msg.to)
                    gs = ka.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        cl.sendText(msg.to,"Tidak Ditemukan.....")
                        ki.sendText(msg.to,"Tidak Ditemukan.....")
                        kk.sendText(msg.to,"Tidak Ditemukan.....")
                        kc.sendText(msg.to,"Tidak Ditemukan.....")
                        ka.sendText(msg.to,"Tidak Ditemukan.....")
                    else:
                        for target in targets:
                            try:
                                del wait["blacklist"][target]
                                f=codecs.open('st2__b.json','w','utf-8')
                                json.dump(wait["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                cl.sendText(msg.to,"Clear")
                            except:
                                ki.sendText(msg.to,"Error")
           #----------------Fungsi Unbanned User Target Finish-----------------------#
           
           #-----------------------------------------------------------
            elif msg.text in ["Setpoint","setpoint"]:
                cl.sendText(msg.to, "Check Yang nyimak")
                try:
                        del wait2['readPoint'][msg.to]
                        del wait2['readMember'][msg.to]
                except:
                        pass
                        now2 = datetime.now()
                        wait2['readPoint'][msg.to] = msg.id
                        wait2['readMember'][msg.to] = ""
                        wait2['setTime'][msg.to] = datetime.strftime(now2,"%H:%M")
                        wait2['ROM'][msg.to] = {}
                        print wait2

            elif msg.text in ["Viewseen","viewseen"]:
                    if msg.to in wait2['readPoint']:
                        if wait2["ROM"][msg.to].items() == []:
                            chiya = ""
                        else:
                            chiya = ""
                            for rom in wait2["ROM"][msg.to].items():
                                print rom
                                chiya += rom[1] + "\n"
                        cl.sendText(msg.to,"======Tercyduck====== %s\n=====Tukang Ngintip======\n%s\nReading point creation date n time:\n[%s]" % (wait2['readMember'][msg.to],chiya,setTime[msg.to]))
                    else:
                         cl.sendText(msg.to,"An already read point has not been set.\nã€Œsetã€you can send â™ª read point will be created â™ª")


#-----------------------------------------------------------
           
        #-------------Fungsi Spam Start---------------------#
            elif msg.text in ["Up","up","Up Chat","Up chat","up chat","Upchat","upchat"]:
                if msg.from_ in admin:
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    cl.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    ki.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
                    kk.sendText(msg.to,"P ô€”ƒô€†¶squared up!ô¿¿")
        #-------------Fungsi Spam Finish---------------------#
        
        #-------------Spam chat yg lain#---------------------#
            elif "Spam " in msg.text:
                if msg.from_ in owner or admin or staff:
                    txt = msg.text.split(" ")
                    jmlh = int(txt[2])
                    text = msg.text.replace("Spam "+str(txt[1])+" "+str(jmlh)+" ","")
                    tulisan = jmlh * (text+"\n")
                    if txt[1] == "on":
                        if jmlh <= 1000:
                            for x in range(jmlh):
                                cl.sendText(msg.to, text)
                        else:
                            cl.sendText(msg.to, "Out Of Range!")
                    elif txt[1] == "off":
                        if jmlh <= 1000:
                            cl.sendText(msg.to, tulisan)
                        else:
                            cl.sendText(msg.to, "Out Of Range!")
#-----------------------------------------------
            elif "Bc " in msg.text:
                bctxt = msg.text.replace("Bc ","")
                ki.sendText(msg.to,(bctxt))
                kk.sendText(msg.to,(bctxt))
                kc.sendText(msg.to,(bctxt))
                ka.sendText(msg.to,(bctxt))

       #-------------Fungsi Respon Start---------------------#
            elif msg.text in ["Respon","respon","Respon Dong","respon dong"]:
                A = cl.getProfile().displayName
                B = ki.getProfile().displayName
                C = kk.getProfile().displayName
                D = kc.getProfile().displayName
                
                cl.sendText(msg.to,A)
                ki.sendText(msg.to,B)
                kk.sendText(msg.to,C)
                kc.sendText(msg.to,D)
      #-------------Fungsi Respon Finish---------------------#

       #-------------Fungsi Speedbot Start---------------------#
            elif msg.text in ["Sp","Speedbot","speedbot","Speed"]:
                if msg.from_ in admin or staff or owner:
                    start = time.time()
                    cl.sendText(msg.to, "Waiting...")
                    elapsed_time = time.time() - start
                    cl.sendText(msg.to, "%sseconds" % (elapsed_time))
                    elapsed_time = time.time() - start
      #-------------Fungsi Speedbot Finish---------------------#
#---------------------------------------------------
            elif msg.text in ["Kembali","backup"]:
                if msg.from_ in admin:
                    try:
                       cl.updateDisplayPicture(backup.pictureStatus)
                       cl.updateProfile(backup)
                       ki.updateDisplayPicture(backup.pictureStatus)
                       ki.updateProfile(backup)
                       kk.updateDisplayPicture(backup.pictureStatus)
                       kk.updateProfile(backup)
                       kc.updateDisplayPicture(backup.pictureStatus)
                       kc.updateProfile(backup)
                       ka.updateDisplayPicture(backup.pictureStatus)
                       ka.updateProfile(backup)
                       ki.sendText(msg.to, "Sukses Backup")
                    except Exception as e:
                       cl.sendText(msg.to, str(e))
#------------------------------------------------
            #------------------------------------------------
            elif "Copy @" in msg.text:
                if msg.toType == 2:
                    if msg.from_ in admin:
                        print "[COPY] Ok"
                        _name = msg.text.replace("Copy @","")
                        _nametarget = _name.rstrip(' ')
                        gs = cl.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        sendMessage(msg.to, "Not Found...")
                    else:
                         for target in targets:
                             try:
                                  cl.cloneContactProfile(target)
                                  ki.cloneContactProfile(target)
                                  kk.cloneContactProfile(target)
                                  kc.cloneContactProfile(target)
                                  ka.cloneContactProfile(target)
                                  cl.sendText(msg.to, "Sukses,bosqu")
                             except Exception as e:
                                 print e

      #-------------Fungsi Banned Send Contact Start------------------#
            elif msg.text in ["Ban"]:
				if msg.from_ in admin:
				    wait["dblacklist"] = True
				    cl.sendText(msg.to,"send contact")
				    ki.sendText(msg.to,"send contact")
				    kk.sendText(msg.to,"send contact")
				    kc.sendText(msg.to,"send contact")
				    ka.sendText(msg.to,"send contact")
            elif msg.text in ["Unban"]:
				if msg.from_ in admin:
				    wait["dblacklist"] = True
				    cl.sendText(msg.to,"send contact")
				    ki.sendText(msg.to,"send contact")
				    kk.sendText(msg.to,"send contact")
				    kc.sendText(msg.to,"send contact")
				    ka.sendText(msg.to,"send contact")
      #-------------Fungsi Bannlist Start------------------#          
            elif msg.text in ["Banlist"]:
                if wait["blacklist"] == {}:
                    cl.sendText(msg.to,"Tidak Ada Akun Terbanned")
                else:
                    cl.sendText(msg.to,"Blacklist user")
                    mc = ""
                    for mi_d in wait["blacklist"]:
                        mc = "->" +cl.getContact(mi_d).displayName + "\n"
                    cl.sendText(msg.to,mc)
      #-------------Fungsi Bannlist Finish------------------#  
      
            elif msg.text in ["Cek ban"]:
                if msg.toType == 2:
                    group = cl.getGroup(msg.to)
                    gMembMids = [contact.mid for contact in group.members]
                    matched_list = []
                    for tag in wait["blacklist"]:
                        matched_list+=filter(lambda str: str == tag, gMembMids)
                    cocoa = ""
                    for mm in matched_list:
                        cocoa += mm + "\n"
                    cl.sendText(msg.to,cocoa + "")
            elif msg.text in ["Kill"]:
                if msg.from_ in admin:
                    if msg.toType == 2:
                        group = cl.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.members]
                        matched_list = []
                        for tag in wait["blacklist"]:
                            matched_list+=filter(lambda str: str == tag, gMembMids)
                        if matched_list == []:
                            cl.sendText(msg.to,"There was no blacklist user")
                            ki.sendText(msg.to,"There was no blacklist user")
                            kk.sendText(msg.to,"There was no blacklist user")
                            kc.sendText(msg.to,"There was no blacklist user")
                            ka.sendText(msg.to,"There was no blacklist user")
                            return
                        for jj in matched_list:
                            cl.kickoutFromGroup(msg.to,[jj])
                            ki.kickoutFromGroup(msg.to,[jj])
                            kk.kickoutFromGroup(msg.to,[jj])
                            kc.kickoutFromGroup(msg.to,[jj])
                            ka.kickoutFromGroup(msg.to,[jj])
                            cl.sendText(msg.to,"Dasar anak jaman now")
            elif msg.text in ["Clear"]:
                if msg.from_ in admin:
                        group = cl.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for _mid in gMembMids:
                            cl.cancelGroupInvitation(msg.to,[_mid])
                        cl.sendText(msg.to,"I pretended to cancel and canceled.")
#----------------------------------------------------------------------------
#------------------------------- Kerang Ajaib -------------------------------
            elif "apakah " in msg.text.lower():
                if msg.from_ in admin
                apk = msg.text.replace("apakah ","")
                rnd = ['Ya','Tidak']
                p = random.choice(rnd)
                cl.sendText(msg.to,p)
                print "[Command] Kerang Ajaib"
#----------------------------------------------------------------------------
#---------------------------------- SONG ------------------------------------
            elif "lirik " in msg.text.lower():
                if msg.from_ in admin  
                songname = msg.text.replace("lirik ","")
                params = {"songname":songname}
                r = requests.get('https://ide.fdlrcn.com/workspace/yumi-apis/joox?' + urllib.urlencode(params))
                data = r.text
                data = json.loads(data)
                for song in data:
                    cl.sendText(msg.to,song[5])
                    print "[Command] Lirik"

            elif "lagu " in msg.text.lower():
                if msg.from_ in admin        
                songname = msg.text.replace("lagu ","")
                params = {"songname":songname}
                r = requests.get('https://ide.fdlrcn.com/workspace/yumi-apis/joox?' + urllib.urlencode(params))
                data = r.text
                data = json.loads(data)
                for song in data:
                    cl.sendText(msg.to,"Judul : " + song[0] + "\nDurasi : " + song[1])
                    cl.sendAudioWithURL(msg.to,song[3])
                    print "[Command] Lagu"
#----------------------------------------------------------------------------
#--------------------------------- INSTAGRAM --------------------------------
            elif "ig " in msg.text.lower():
                if msg.from_ in admin
                arg = msg.text.split(' ');
                nk0 = msg.text.replace("ig ","")
                nk1 = nk0.rstrip('  ')
                if len(arg) > 1:
                    proc = subprocess.Popen('curl -s https://www.instagram.com/'+nk1+'/?__a=1',shell=True, stdout=subprocess.PIPE)
                    x = proc.communicate()[0]
                    parsed_json = json.loads(x)
                    if(len(x) > 10):
                        username = (parsed_json['user']['username'])
                        fullname = (parsed_json['user']['full_name'])
                        followers = (parsed_json['user']['followed_by']['count'])
                        following = (parsed_json['user']['follows']['count'])
                        media = (parsed_json['user']['media']['count'])
                        bio = (parsed_json['user']['biography'])
                        url = (parsed_json['user']['external_url'])
                        cl.sendText(msg.to,"Profile "+username+"\n\nUsername : "+username+"\nFull Name : "+fullname+"\nFollowers : "+str(followers)+"\nFollowing : "+str(following))
                        print '[Command] Instagram'
                    else:
                        cl.sendText(msg.to,"Not Found...")
                else:
                    cl.sendText(msg.to,"Contoh /ig hairu.ones")
#----------------------------------------------------------------------------
#--------------------------------- YOUTUBE ----------------------------------
            elif "youtube " in msg.text:
                if msg.from_ in admin
                query = msg.text.replace("youtube ","")
                with requests.session() as s:
                    s.headers['user-agent'] = 'Mozilla/5.0'
                    url = 'http://www.youtube.com/results'
                    params = {'search_query': query}
                    r = s.get(url, params=params)
                    soup = BeautifulSoup(r.content, 'html5lib')
                    hasil = ""
                    for a in soup.select('.yt-lockup-title > a[title]'):
                        if '&list=' not in a['href']:
                            hasil += ''.join((a['title'],'\nhttp://www.youtube.com' + a['href'],'\n\n'))
                    cl.sendText(msg.to,hasil)
                    print '[Command] Youtube Search'
#----------------------------------------------------------------------------
#--------------------------------- TRANSLATE --------------------------------
            elif "translate-en " in msg.text:
                if msg.from_ in admin  
                txt = msg.text.replace("translate-en ","")
                try:
                    gs = goslate.Goslate()
                    trs = gs.translate(txt,'en')
                    cl.sendText(msg.to,trs)
                    print '[Command] Translate EN'
                except:
                    cl.sendText(msg.to,'Error.')

            elif "/translate-id " in msg.text:
                if msg.from_ in admin
                txt = msg.text.replace("translate-en ","")
                try:
                    gs = goslate.Goslate()
                    trs = gs.translate(txt,'id')
                    cl.sendText(msg.to,trs)
                    print '[Command] Translate ID'
                except:
                    cl.sendText(msg.to,'Error.')
#----------------------------------------------------------------------------
    #--------------Fungsi grup list---------------------------#
            elif op.type == 26:
                if msg.text in ["List group","Glist"]:
                    if msg.from_ in admin or staff:
                        gid = cl.getGroupIdsJoined()
                        L = "【 Groups List 】\n"
                        for i in gid:
                            L += "[â­] %s \n" % (cl.getGroup(i).name + " | Members : " + str(len (cl.getGroup(i).members)) + "\n Id: " + cl.getGroup(i).id)
                        cl.sendText(msg.to,L +"Total Group : " +str(len(gid)))
                        
                elif "InviteMeTo: " in msg.text:
                    if msg.from_ in admin:
                        gid = msg.text.replace("InviteMeTo: ","")
                        if gid == "":
                            cl.sendText(msg.to,"Invalid group id")
                        else:
                            print msg.from_
                            try:
                                try:
                                    cl.inviteIntoGroup(gid,[msg.from_])
                                    cl.sendText(msg.to,"Sudah saya undang")
                                except:
                                    cl.sendText(msg.to,"Error")
                            except:
                                try:
                                    ki.inviteIntoGroup(gid,[msg.from_])
                                    ki.sendText(msg.to,"Sudah saya undang")
                                except:
                                        try:
                                            kk.inviteIntoGroup(gid,[msg.from_])
                                            kk.sendText(msg.to,"Sudah saya undang")
                                        except:
                                                try:
                                                    kc.inviteIntoGroup(gid,[msg.from_])
                                                    kc.sendText(msg.to,"Sudah saya undang")
                                                except:
                                                    pass
                elif "random: " in msg.text:
                     if msg.from_ in admin:
                        if msg.toType == 2:
                            strnum = msg.text.replace("random: ","")
                            source_str = 'abcdefghijklmnopqrstuvwxyz1234567890@:;./_][!&%$#)(=~^|'
                            try:
                                num = int(strnum)
                                group = cl.getGroup(msg.to)
                                for var in range(0,num):
                                    name = "".join([random.choice(source_str) for x in xrange(10)])
                                    time.sleep(0.01)
                                    group.name = name
                                    cl.updateGroup(group)
                            except:
                                cl.sendText(msg.to,"Error")
                elif "albumat'" in msg.text:
                    if msg.from_ in admin:
                        try:
                            albumtags = msg.text.replace("albumat'","")
                            gid = albumtags[:6]
                            name = albumtags.replace(albumtags[:34],"")
                            cl.createAlbum(gid,name)
                            cl.sendText(msg.to,name + "created an album")
                        except:
                            cl.sendText(msg.to,"Error")
                elif "fakecat'" in msg.text:
                    if msg.from_ in admin:
                        try:
                            source_str = 'abcdefghijklmnopqrstuvwxyz1234567890@:;./_][!&%$#)(=~^|'
                            name = "".join([random.choice(source_str) for x in xrange(10)])
                            anu = msg.text.replace("fakecat'","")
                            cl.sendText(msg.to,str(cl.channel.createAlbum(msg.to,name,anu)))
                        except Exception as e:
                            try:
                                cl.sendText(msg.to,str(e))
                            except:
                                pass
                            
                elif msg.text in ["Me","me","myid","Myid"]:
                    if msg.from_ in admin or staff:
                        try:
                            print "Success"
                            H = cl.getContact(msg.from_).mid
                            cl.sendText(msg.to,"Mid:" + H)
                        except:
                            cl.sendText(msg.to,"Error")
        if op.type == 59:
            print op


    except Exception as error:
        print error


def a2():
    now2 = datetime.now()
    nowT = datetime.strftime(now2,"%M")
    if nowT[14:] in ["10","20","30","40","50","00"]:
        return False
    else:
        return True

def nameUpdate():
    while True:
        try:
        #while a2():
            #pass
            if wait["clock"] == True:
                now2 = datetime.now()
                nowT = datetime.strftime(now2,"(%H:%M)")
                profile = cl.getProfile()
                profile.displayName = wait["cName"]
                cl.updateProfile(profile)

                profile2 = ki.getProfile()
                profile2.displayName = wait["cName2"]
                ki.updateProfile(profile2)

                profile3 = kk.getProfile()
                profile3.displayName = wait["cName3"]
                kk.updateProfile(profile3)
                
                now2 = datetime.now()
                nowT = datetime.strftime(now2,"(%H:%M)")
                profile4 = kc.getProfile()
                profile4.displayName = wait["cName4"]
                kc.updateProfile(profile4)
            time.sleep(600)
        except:
            pass
thread2 = threading.Thread(target=nameUpdate)
thread2.daemon = True
thread2.start()

while True:
    try:
        Ops = cl.fetchOps(cl.Poll.rev, 5)
    except EOFError:
        raise Exception("It might be wrong revision\n" + str(cl.Poll.rev))

    for Op in Ops:
        if (Op.type != OpType.END_OF_OPERATION):
            cl.Poll.rev = max(cl.Poll.rev, Op.revision)
            bot(Op)
